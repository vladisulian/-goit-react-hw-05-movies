{"version":3,"file":"static/js/147.0e5d04ca.chunk.js","mappings":"mTACMA,EAAU,mCACVC,EAAM,gCACL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,eACpBF,EADoB,oCACWD,IAF7B,cACCI,EADD,yBAGEA,EAASC,KAAKC,SAHhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNO,EADM,oBACQR,EADR,oBADlB,cACCI,EADD,yBAKEA,EAASC,MALX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACSD,EADT,iCACyCU,EADzC,gCADlB,cACCN,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNO,EADM,4BACgBR,EADhB,oBADlB,cACCI,EADD,yBAKEA,EAASC,MALX,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNO,EADM,4BACgBR,EADhB,2BADlB,cACCI,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE,mEC5BMO,EAAU,WACrB,OACE,+BACE,4DAGL,C,oHCNYC,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC/B,eAAIC,UAAU,eAAd,SAA8BD,GADC,E,SCEpBE,EAAgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9B,OAAuB,IAAnBA,EAAQC,QACH,mDAEAD,EAAQE,KAAI,SAAAC,GACjB,IAAIC,GAASC,EAAAA,EAAAA,cAAaF,EAAOG,eAAeC,aAChD,GAAuB,IAAnBP,EAAQC,OACV,OACE,gBAAoBH,UAAU,gBAA9B,WACE,iBAAKA,UAAU,qBAAf,WACE,eAAGA,UAAU,qBAAb,UACGK,EAAOK,OADV,KACkB,gCAAQL,EAAOG,eAAeG,SAA9B,UAEjBN,EAAOG,eAAeC,aACrB,gBAAKG,IAAKN,EAAQO,IAAI,SAASb,UAAU,mBAEzC,gBAAKA,UAAU,wBAAf,wBAIJ,gBAAKA,UAAU,wBAAf,UACE,cAAGA,UAAU,cAAb,SAA4BK,EAAOS,cAb9BT,EAAOb,GAiBrB,GAEJ,ECDD,EArBgB,WACd,IAAQuB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOf,EAAP,KAAgBgB,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,EAAW,KAEXtB,EAAAA,EAAAA,IAAamB,GACVK,MAAK,SAAA/B,GAAI,OAAI6B,EAAW7B,EAAf,IACTgC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAhB,GACX,GAAE,CAACP,KAGF,+BACE,SAACjB,EAAD,WACE,SAACG,EAAD,CAAeC,QAASA,OAI/B,C,uKCnBYK,EAAe,SAAAkB,GAC1B,OAAIC,OAAOD,GAAYE,SAAS,UACvBF,EAAWG,MAAM,GAElB,oDAAN,OAA2DH,EAE9D,EAwDD,EAtDqB,WAAO,IAAD,IACjBV,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOY,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,2BAEnCC,EAAS7B,EAAasB,EAAaQ,aAQzC,OANAlB,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAkBwB,GACfK,MAAK,SAAA/B,GAAI,OAAIyC,EAAgBzC,EAApB,IACTgC,OAAM,SAAAiB,GAAK,OAAIf,QAAQC,IAAIc,EAAhB,GACf,GAAE,CAACvB,KAGF,+BACE,UAAC,EAAAwB,SAAD,CAAUC,UAAU,SAAC3C,EAAA,EAAD,IAApB,WACE,SAAC,KAAD,CAAM4C,GAAIR,EAAUjC,UAAU,iBAA9B,wBAGA,iBAAKA,UAAU,kBAAf,WACE,gBAAKY,IAAKwB,EAAQvB,IAAI,SAASb,UAAU,YACzC,iBAAKA,UAAU,iBAAf,WACE,eAAGA,UAAU,cAAb,UACG6B,EAAaa,OACd,iCAAShB,OAAOG,EAAac,cAAcf,MAAM,EAAG,GAApD,WAEF,cAAG5B,UAAU,YAAb,yBACA,iBAAMA,UAAU,aAAhB,SAA8B6B,EAAae,cAC3C,cAAG5C,UAAU,qBAAb,uBACA,cAAGA,UAAU,gBAAb,SAA8B6B,EAAagB,YAE3C,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMJ,GAAE,OAAUP,MAAO,CAAEC,KAAMJ,GAAjC,qBAIF,yBACE,SAAC,KAAD,CAAMU,GAAE,UAAaP,MAAO,CAAEC,KAAMJ,GAApC,iCAOR,SAAC,KAAD,QAIP,C","sources":["Pages/API/API.jsx","Pages/Loading/Loading.jsx","Pages/Movies/AdditionalInformation/Reviews/RenderReviews/RenderReviewList.jsx","Pages/Movies/AdditionalInformation/Reviews/RenderReviews/RenderReviews.jsx","Pages/Movies/AdditionalInformation/Reviews/Reviews.jsx","Pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '635ac74a11f3f55a21a984cd556f5915';\nconst URL = 'https://api.themoviedb.org/3/';\nexport async function FetchTrending() {\n  const response = await axios.get(`\n   ${URL}trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\nexport async function FetchMovieDetails(id) {\n  const response = await axios.get(\n    `${URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(response.data, 'from fetchMovieDetails');\n  return response.data;\n}\nexport async function FetchByName(name) {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\nexport async function FetchCast(id) {\n  const response = await axios.get(\n    `${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  //   console.log('response.data', response.data);\n  return response.data;\n}\nexport async function FetchReviews(id) {\n  const response = await axios.get(\n    `${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n}\n","export const Loading = () => {\n  return (\n    <>\n      <h4>Please, wait a bit. Loading...</h4>\n    </>\n  );\n};\n","export const RenderReviewsList = ({ children }) => (\n  <ul className=\"reviews-list\">{children}</ul>\n);\n","import { getPosterUrl } from 'Pages/Movies/MovieDetails/MovieDetails';\n\nexport const RenderReviews = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <h1>There is no reviews :(</h1>;\n  } else {\n    return reviews.map(review => {\n      let avatar = getPosterUrl(review.author_details.avatar_path);\n      if (reviews.length !== 0)\n        return (\n          <li key={review.id} className=\"review-author\">\n            <div className=\"review-author-info\">\n              <p className=\"review-author-name\">\n                {review.author} <span>\"{review.author_details.username}\"</span>\n              </p>\n              {review.author_details.avatar_path ? (\n                <img src={avatar} alt=\"avatar\" className=\"review-avatar\" />\n              ) : (\n                <div className=\"review-without-avatar\">Avatar</div>\n              )}\n            </div>\n\n            <div className=\"review-text-container\">\n              <p className=\"review-text\">{review.content}</p>\n            </div>\n          </li>\n        );\n    });\n  }\n};\n","import './Reviews.css';\nimport { FetchReviews } from 'Pages/API/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RenderReviewsList } from './RenderReviews/RenderReviewList';\nimport { RenderReviews } from './RenderReviews/RenderReviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    setReviews([]);\n\n    FetchReviews(movieId)\n      .then(data => setReviews(data))\n      .catch(e => console.log(e));\n  }, [movieId]);\n\n  return (\n    <>\n      <RenderReviewsList>\n        <RenderReviews reviews={reviews} />\n      </RenderReviewsList>\n    </>\n  );\n};\n\nexport default Reviews;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { FetchMovieDetails } from 'Pages/API/API';\nimport './MovieDetails.css';\nimport { Loading } from 'Pages/Loading/Loading';\n\nexport const getPosterUrl = posterPath => {\n  if (String(posterPath).includes('https:')) {\n    return posterPath.slice(1);\n  } else {\n    return `https://www.themoviedb.org/t/p/w220_and_h330_face${posterPath}`;\n  }\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [currentMovie, setCurrentMovie] = useState({});\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/goit-react-hw-05-movies';\n\n  const poster = getPosterUrl(currentMovie.poster_path);\n\n  useEffect(() => {\n    FetchMovieDetails(movieId)\n      .then(data => setCurrentMovie(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <Suspense fallback={<Loading />}>\n        <Link to={backLink} className=\"back-home-link\">\n          Back home\n        </Link>\n        <div className=\"movie-container\">\n          <img src={poster} alt=\"poster\" className=\"poster\" />\n          <div className=\"text-container\">\n            <p className=\"film-title \">\n              {currentMovie.title}\n              <span> ({String(currentMovie.release_date).slice(0, 4)})</span>\n            </p>\n            <p className=\"film-bold\">Popularity</p>\n            <span className=\"popularity\">{currentMovie.popularity}</span>\n            <p className=\"film-bold overview\">Overview</p>\n            <p className=\"overview-desc\">{currentMovie.overview}</p>\n            {/* <p>Genres: {genres}</p> */}\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={`cast`} state={{ from: location }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={`reviews`} state={{ from: location }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","URL","FetchTrending","axios","response","data","results","FetchMovieDetails","id","FetchByName","name","FetchCast","FetchReviews","Loading","RenderReviewsList","children","className","RenderReviews","reviews","length","map","review","avatar","getPosterUrl","author_details","avatar_path","author","username","src","alt","content","movieId","useParams","useState","setReviews","useEffect","then","catch","e","console","log","posterPath","String","includes","slice","currentMovie","setCurrentMovie","location","useLocation","backLink","state","from","poster","poster_path","error","Suspense","fallback","to","title","release_date","popularity","overview"],"sourceRoot":""}